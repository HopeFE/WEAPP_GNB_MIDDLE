<style lang="less" scoped>
.search{
  .zan-cell{
    padding: 5px 15px;
  }
}
</style>

<template>
  <view class="container">
    <!--标题-->
    <view class="zan-row zan-center" style="margin: 40rpx 0;">
      <text class="zan-col zan-col-24 zan-font-22 zan-c-black">选择你正在使用的习题册</text>
      <text class="zan-col zan-col-24 zan-font-14 zan-c-gray-darker" style="margin-top: 30rpx;">数学 新人教版 {{gradeName}}</text>
    </view>
    <!--搜索-->
    <view class="zan-panel search">
      <searchField :options.sync="base_search" componentId="searchField"/>
    </view>
    <!--习题册区间-->
    <view class="zan-panel" style="margin-top: 0;">
      <scroll-view scroll-y="true" style="height: 630rpx;background:#fff;" scroll-with-animation="true" enable-back-to-top="true">
        <repeat for="{{ workbookList }}" key="pindex" index="pindex" item="item">
          <view class="zan-card">
            <!--习题册图片-->
            <view class="zan-card__thumb" bindtap="_preview({{ item.img.url }})">
              <image class="zan-card__img" src="{{ item.img.url }}?imageView2/2/w/180/h/270/format/jpg/q/75" mode="aspectFit" lazy-load='true'/>
            </view>
            <!--习题册详情-->
            <view class="zan-card__detail" bindtap="_edit({{ pindex}}, {{item.id}})">
              <view class="zan-card__detail-row">
                <view class="zan-card__left-col zan-font-14" style="color:#3FC6C6">{{item.year}}版</view>
              </view>
              <view class="zan-card__detail-row zan-c-gray-darker">
                <view class="zan-card__right-col">
                  <button wx:if="{{ item.status }}" class="zan-btn zan-btn--small zan-btn--plain zan-btn--warn">删除</button>
                  <button wx:else class="zan-btn zan-btn--small zan-btn--plain zan-btn--primary {{ item.status ? '123':'213' }}">添加</button>
                </view>
                <view class="zan-card__left-col zan-font-16" style="margin-bottom: 3px;">{{item.name}}</view>
                <repeat for="{{item.version}}" key="index" index="index" item="version">
                  <view class="zan-card__left-col zan-c-gray zan-font-12" style="margin-bottom: 6rpx;">{{version}}</view>
                </repeat>
              </view>
            </view>
          </view>
        </repeat>
      </scroll-view>
    </view>
    <!--习题册区间End-->
    <!--进入想要习题册-->
    <view class="zan-row zan-center" style="padding:30rpx 0;">
      <navigator open-type="navigate" url="/pages/workbook/want">
        <view class="zan-col zan-col-24 zan-font-14 zan-c-gray">没有找到想要的习题册？
          <text style="color:#FF7043;text-decoration:underline;">告诉我们</text>
        </view>
      </navigator>
    </view>
    <!--进入我的-->
    <view class="zan-row">
      <button class="zan-col zan-col-18 zan-col-offset-3 zan-btn zan-btn--primary" bindtap='_begin'>选好了，开始记错</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import zanField from '@/components/zan-field'

  export default class InitAddWorkbook extends wepy.page {
    config = {
      navigationBarTitleText: '错题归纳本小学数学'
    }

    components = {
      searchField: zanField
    }

    data = {
      gradeName: '',
      textbookId: '',
      workbookList: [],
      base_search: {
        title: '搜索习题册',
        value: '',
        placeholder: '请输入练习册名称'
      }
    }

    events = {
      async zanFieldChange(e) {
        this.base_search.value = e.detail.value
        this.workbookList = await this._getAllWorkbook(this.textbookId, this.base_search.value)
        this.$apply()
      }
    }

    methods = {
      /** 查看练习册大图 */
      _preview (url) {
        wepy.previewImage({current: `${url}-primaryError`, urls: [`${url}-primaryError`]})
      },
      /** 练习册增加删除 */
      async _edit (index, id) {
        this.workbookList[index].status = await this._setWorkbook(id)
        this.$apply()
      },
      /**  进入我的资料 */
      _begin () {
        wepy.reLaunch({
          url: '/pages/workbook/index'
        })
      }
    }

    /** 获取全部习题册 */
    _getAllWorkbook (id, name) {
      return new Promise((resolve, reject) => {
        wepy.request({
          url: 'https://middle.guinaben.com/workbook/all',
          data: {
            textbookId: id,
            name: name
          },
          success (res) {
            resolve(res)
          },
          fail (err) {
            reject(err)
          }
        })
      })
    }

    /** 编辑习题册 */
    _setWorkbook (id) {
      return new Promise((resolve, reject) => {
        wepy.request({
          url: 'https://middle.guinaben.com/workbook/edit',
          method: 'POST',
          data: {
            workbookId: id
          },
          success (res) {
            resolve(res.status)
          },
          fail (err) {
            reject(err)
          }
        })
      })
    }

    async onLoad(options) {
      this.gradeName = options.name
      this.textbookId = options.textbookId
      this.workbookList = await this._getAllWorkbook(this.textbookId, this.base_search.value)
      this.$apply()
    }
  }
</script>
