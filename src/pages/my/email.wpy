<style lang="less" scoped>
.zan-arrow {
  transform:rotate(135deg);
  border-color:black;
  margin-top:-5px;
}
.zan-field {
  width:65%;
}
</style>

<template>
  <view class="container">
    <view class="zan-panel-title zan-font-bold zan-c-black" style="margin-top:30px;">题目发送到邮箱，直接打印回家做</view>
    <view class="zan-panel" style="margin: 20px 0;">
      <view class="zan-cell" style="padding:0;position:statics">
        <zanField1 :options.sync="form_email" componentId="zanField1"></zanField1>
        <picker bindchange="bindEmailCodeChange" value="{{emailCodeIndex}}" range="{{emailCodes}}" style="width:35%">
          <view style="width:100%;height:35px;line-height:35px;">{{emailCodes[emailCodeIndex]}}
            <text class="zan-arrow"></text>
          </view>
        </picker>
      </view>
    </view>
    <view class="zan-row">
      <button class="zan-col zan-col-18 zan-col-offset-3 zan-btn zan-btn--primary" bindtap='_send'>发送</button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import zanField from '@/components/zan-field'

  // 可使用得Email邮箱列表
  const emailList = ['@qq.com', '@126.com', '@139.com', '@163.com', '@189.com', '@sohu.com', '@sina.com', '@gmail.com']
  export default class MyEmail extends wepy.page {
    config = {
      navigationBarTitleText: '下载'
    }

    components = {
      zanField1: zanField
    }

    data = {
      id: '',
      type: '',
      emailCodes: emailList,
      emailCodeIndex: 0,
      form_email: {
        title: '',
        value: '',
        placeholder: '请输入邮箱'
      }
    }

    events = {
      zanFieldChange(e) {
        let { detail } = e
        this.form_email.value = detail.value
        this.$apply()
      }
    }

    methods = {
      bindEmailCodeChange (e) {
        this.emailCodeIndex = e.detail.value
      },
      /** 发送Email */
      async _send() {
        // 如果当前的Email和信息相同则发送，否则更新Email信息在发送
        let mail = this.form_email.value + this.emailCodes[this.emailCodeIndex]
        if (mail !== wepy.getStorageSync('User').email) {
          await this._setUserEmail(this.form_email.value + this.emailCodes[this.emailCodeIndex])
        }
        await this._sendEmail(this.id, this.type)
      }
    }

    /** 设置用户信息 */
    _setUserEmail (email) {
      wepy.showLoading({title: '提交中'})
      return new Promise((resolve, reject) => {
        wepy.request({
          url: 'https://middle.guinaben.com/member/infoEdit',
          method: 'POST',
          data: {
            email: email
          },
          success (res) {
            wepy.setStorageSync('User', res)
            resolve(res)
          },
          fail (err) {
            reject(err)
          },
          complete () {
            wepy.hideLoading()
          }
        })
      })
    }

    /** 发送Email */
    _sendEmail (id, type) {
      let url
      if (type === 'statistics') {
        url = 'https://middle.guinaben.com/textbook/statistics/download'
      } else {
        url = 'https://middle.guinaben.com/workbook/chapter/errorDownload'
      }
      wepy.showLoading({title: '请稍候'})
      return new Promise((resolve, reject) => {
        wepy.request({
          url: url,
          data: {
            chapterId: id
          },
          success (res) {
            wepy.showModal({
              title: '发送成功',
              content: '已发送至您的邮箱(若未收到，请查看垃圾邮件)',
              confirmText: '知道了',
              showCancel: false,
              success(res) {
                if (res.confirm) {
                  wepy.navigateBack()
                }
              }
            })
            resolve(res.url)
          },
          fail (err) {
            reject(err)
          },
          complete () {
            wepy.hideLoading()
          }
        })
      })
    }

    onLoad(options) {
      this.type = options.type
      this.id = options.id
      this.$apply()
    }

    onShow() {
      let email = wepy.getStorageSync('User').email
      // 获取邮箱和邮箱类型
      this.form_email.value = email.split('@')[0]
      let type = `@${email.split('@')[1]}`
      for (let i = 0; i < emailList.length; i++) {
        if (type === emailList[i]) {
          this.emailCodeIndex = i
          break
        }
      }
      this.$apply()
    }
  }
</script>
