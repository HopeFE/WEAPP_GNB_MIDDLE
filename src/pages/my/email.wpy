<style lang="less">
.myEmail{
  .zan-arrow {
    transform:rotate(135deg);
    border-color:black;
    margin-top:-5px;
  }
  .zan-btn{border-radius:0;}
  .zan-field {
    width:65%;
  }
}
</style>

<template>
  <view class="container myEmail">
    <view class="zan-panel-title zan-font-bold zan-c-black" style="margin-top:30px;">题目发送到邮箱，直接打印回家做</view>
    <view class="zan-panel" style="margin: 20px 0;">
      <view class="zan-cell" style="padding:0;position:statics">
        <zanField1 :options.sync="form_email" componentId="zanField1"></zanField1>
        <picker bindchange="bindEmailCodeChange" value="{{emailCodeIndex}}" range="{{emailCodes}}" style="width:35%">
          <view style="width:100%;height:35px;line-height:35px;">{{emailCodes[emailCodeIndex]}}
            <text class="zan-arrow"></text>
          </view>
        </picker>
      </view>
    </view>
    <view class="zan-row">
      <button class="zan-col zan-col-18 zan-col-offset-3 zan-btn zan-btn--primary zan-btn--middle {{emailDisabled ? '' : 'zan-btn--disabled'}}"
        open-type="getUserInfo" bindgetuserinfo="_send"
        disabled="{{!emailDisabled}}" style="border-radius: 5px;"
      >
        发送
      </button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import zanField from '@/components/zan-field'

  // 可使用得Email邮箱列表
  const emailList = ['@qq.com', '@126.com', '@139.com', '@163.com', '@189.com', '@sohu.com', '@sina.com', '@gmail.com']
  export default class MyEmail extends wepy.page {
    config = {
      navigationBarTitleText: '下载'
    }

    components = {
      zanField1: zanField
    }

    computed = {
      emailDisabled () {
        return Boolean(this.form_email.value)
      }
    }

    data = {
      id: '',
      type: '',
      tag: '',
      emailCodes: emailList,
      emailCodeIndex: 0,
      form_email: {
        title: '',
        value: '',
        placeholder: '请输入邮箱'
      }
    }

    events = {
      zanFieldChange(e) {
        let { detail } = e
        this.form_email.value = detail.value
        this.$apply()
      }
    }

    methods = {
      bindEmailCodeChange (e) {
        this.emailCodeIndex = e.detail.value
      },
      /** 发送Email */
      async _send(res) {
        // 授权判断
        if (res.detail.errMsg !== 'getUserInfo:ok') {
          wepy.showToast({ title: '请不要拒绝授权', icon: 'none' })
          return
        }
        // 第一次上传个人信息
        if (!wepy.getStorageSync('gnb_middle_User').bind) {
          await this._bindUser(res.detail)
        }
        // 如果当前的Email和信息相同则发送，否则更新Email信息在发送
        let mail = this.form_email.value + this.emailCodes[this.emailCodeIndex]
        if (mail !== wepy.getStorageSync('gnb_middle_User').email) {
          await this._setUserEmail(this.form_email.value + this.emailCodes[this.emailCodeIndex])
        }
        await this._sendEmail(this.id, this.type)
      }
    }
    /** 绑定用户 */
    _bindUser (user) {
      wepy.showLoading({title: '请稍候'})
      return new Promise((resolve, reject) => {
        wepy.request({
          url: 'https://mid.guinaben.com/v2/member/infoInit',
          method: 'POST',
          data: {
            encryptedData: user.encryptedData,
            session_key: wepy.getStorageSync('gnb_middle_session_key'),
            iv: user.iv
          },
          success (res) {
            wepy.hideLoading()
            wepy.setStorageSync('gnb_middle_User', res)
            resolve(res)
          },
          fail (err) {
            wepy.hideLoading()
            reject(err)
          }
        })
      })
    }
    /** 设置用户信息 */
    _setUserEmail (email) {
      wepy.showLoading({title: '提交中'})
      return new Promise((resolve, reject) => {
        wepy.request({
          url: 'https://mid.guinaben.com/v2/member/infoEdit',
          method: 'POST',
          data: {
            email: email
          },
          success (res) {
            wepy.setStorageSync('gnb_middle_User', res)
            resolve(res)
          },
          fail (err) {
            reject(err)
          },
          complete () {
            wepy.hideLoading()
          }
        })
      })
    }

    /** 发送Email */
    _sendEmail (id, type) {
      let url = ''
      let options = {}
      if (type === 'statistics') {
        url = 'https://mid.guinaben.com/v2/textbook/statistics/download'
        options = {
          chapterId: id,
          type: this.$parent.globalData.statisticsSelect[0].toString()
        }
      } else if (type === 'workbook') {
        url = 'https://mid.guinaben.com/v2/workbook/chapter/errorDownload'
        options = {
          chapterId: id
        }
      } else {
        url = 'https://mid.guinaben.com/v2/resource/download/new/'
        options = {
          id: id,
          type: this.tag
        }
      }
      wepy.showLoading({title: '请稍候'})
      return new Promise((resolve, reject) => {
        wepy.request({
          url: url,
          data: {
            ...options
          },
          success (res) {
            try {
              if (res.hasOwnProperty('url')) {
                wepy.showModal({
                  title: '发送成功',
                  content: '已发送至您的邮箱(若未收到，请查看垃圾邮件)',
                  confirmText: '知道了',
                  showCancel: false,
                  success(result) {
                    if (result.confirm) {
                      wepy.navigateBack()
                    }
                  }
                })
              }
            } catch (err) {
              wepy.showModal({
                title: '提示',
                content: '亲，超出任务了，明天再来吧！',
                confirmText: '知道了',
                showCancel: false
              })
            }
          },
          fail (err) {
            console.log(err)
          },
          complete () {
            wepy.hideLoading()
          }
        })
      })
    }

    onLoad(options) {
      this.type = options.type
      this.id = options.id
      this.tag = options.tag
      this.$apply()
    }

    onShow() {
      let email = wepy.getStorageSync('gnb_middle_User').email
      // 获取邮箱和邮箱类型
      this.form_email.value = email.split('@')[0]
      let type = `@${email.split('@')[1]}`
      for (let i = 0; i < emailList.length; i++) {
        if (type === emailList[i]) {
          this.emailCodeIndex = i
          break
        }
      }
      this.$apply()
    }

    onShareAppMessage (res) {
      if (res.from === 'button') {
        console.log(res.target)
      }
      return {
        title: '各位家长：这样记错题，速度快、好处多',
        imageUrl: 'http://img.guinaben.com/gnb_miniprogram_share.jpg?imageView2/0/q/75|imageslim',
        path: '/pages/workbook/index'
      }
    }
  }
</script>
