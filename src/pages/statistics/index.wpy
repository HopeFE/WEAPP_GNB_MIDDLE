<style lang="less" scoped>
.numberColor{
  color: #FDCA3A;
  text-align:center;
}
.zan-panel .zan-row:nth-child(even){
  background-color: #EDF9F8;
}
</style>

<template>
  <view class="container">
    <gnbTextbookSelect :value.sync="grade" :key.sync="textbook" @event.user="textbookChange" :textbook.sync="textBookList"/>
    <view class="zan-panel">
      <view class="zan-row zan-cell">
        <view class="zan-col zan-col-6 zan-col-offset-6 zan-center">记题数</view>
        <view class="zan-col zan-col-6 zan-center">错题数</view>
        <view class="zan-col zan-col-6 zan-center">正确率</view>
      </view>
      <repeat for="{{statistics}}" key="index" index="index" item="item">
        <view class="zan-row zan-cell" bindtap='_intoList({{item}})'>
          <view class="zan-col zan-col-6" style="text-indent: 10px">{{item.name}}</view>
          <view class="zan-col zan-col-6 numberColor">{{item.record}}</view>
          <view class="zan-col zan-col-6 numberColor">{{item.error}}</view>
          <view class="zan-col zan-col-6 numberColor">{{item.correct}}</view>
        </view>
      </repeat>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import gnbTextbookSelect from '@/components/gnb-textbookSelect'

  export default class Statistics extends wepy.page {
    config = {
      navigationBarTitleText: '错题本'
    }

    components = {
      gnbTextbookSelect: gnbTextbookSelect
    }

    data = {
      textBookList: [],
      textbook: '',
      grade: '',
      statistics: []
    }

    methods = {
      _intoList (item) {
        if (item.record === 0) {
          return ''
        } else if (item.error === 0) {
          wepy.navigateTo({
            url: `/pages/statistics/correct?name=${item.name}&id=${item.chapterId}`
          })
        } else {
          wepy.navigateTo({
            url: `/pages/statistics/error?name=${item.name}&id=${item.chapterId}`
          })
        }
      },
      async textbookChange (id) {
        this.statistics = await this._getStatistics(id)
        this.$apply()
      }
    }

    _getStatistics (id) {
      return new Promise((resolve, reject) => {
        wepy.request({
          url: 'https://mid.guinaben.com/textbook/statistics',
          data: {
            textbookId: id
          },
          success (res) { resolve(res) },
          fail (err) { reject(err) }
        })
      })
    }

    onLoad() {
      this.grade = wepy.getStorageSync('User').grade - 3
      this.textBookList = wepy.getStorageSync('User').textbook
      this.textbook = this.textBookList[Number(this.grade)].id
      this.$apply()
    }

    async onShow() {
      this.statistics = await this._getStatistics(this.textbook)
      this.$apply()
    }
  }
</script>
