<style lang="less" scoped>
.workbookIndex{
  .header{
    height:40px;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 2;
  }
}
.add_button {
  position: fixed;
  background:#4cc0be;
  color:#fff;
  font-size: 70rpx;
  height: 120rpx;
  line-height: 110rpx;
  width: 120rpx;
  border-radius: 50%;
  bottom: 5%;
  right: 5%;
  text-align: center;
}
</style>
<template>
  <view class="container workbookIndex">
    <gnbTextbookSelect class="header" :value.sync="textbook" @event.user="textbookChange" :textbook.sync="textBookList"/>
    <view>
      <!--练习册区间-->
      <view class="zan-panel" style='margin-top: 38px;'>
        <scroll>
          <repeat for="{{ workbookList }}" key="pindex" index="pindex" item="item">
            <view class="zan-card" bindtap="_intoChapter({{item}})">
              <!--练习册图片-->
              <view class="zan-card__thumb">
                <image class="zan-card__img" src="{{ item.img.url }}?imageView2/2/w/180/h/270/format/jpg/q/75" mode="aspectFit" lazy-load='true'/>
              </view>
              <!--练习册详情-->
              <view class="zan-card__detail">
                <view class="zan-card__detail-row">
                  <view class="zan-card__left-col zan-c-gray zan-font-14" style="color:#3FC6C6;margin: 8rpx 0 12rpx;">{{item.year}}版</view>
                </view>
                <view class="zan-card__detail-row zan-c-gray-darker">
                  <view class="zan-card__left-col zan-font-16" style="margin-bottom: 10rpx;">{{item.name}}</view>
                  <view class="zan-card__left-col zan-font-14" style="color:#3FC6C6;margin-bottom: 10rpx;">{{item.number}}人正在使用</view>
                </view>
              </view>
            </view>
          </repeat>
        </scroll>
      </view>
    </view>
    <button class="add_button" bindtap='_initAdd'>+</button>
  </view>
</template>

<script>
import wepy from 'wepy'
import gnbTextbookSelect from '@/components/gnb-textbookSelect'

export default class Statistics extends wepy.page {
  config = {
    navigationBarTitleText: '记错题'
  }

  components = {
    gnbTextbookSelect: gnbTextbookSelect
  }

  data = {
    textBookList: [],
    textbook: '',
    workbookList: []
  }

  methods = {
    /** 教材切换 */
    async textbookChange (id) {
      // 更改用户练习册
      let userinfo = await this._setUserInfo(id)
      wepy.setStorageSync('gnb_middle_User', userinfo)
      this.workbookList = await this._getMyWorkbook(id)
      this.$apply()
    },
    /** 进入章节 */
    _intoChapter (item) {
      wepy.navigateTo({
        url: `/pages/workbook/chapter?name=${item.name}&id=${item.id}`
      })
    },
    /** 增加练习册 */
    _initAdd () {
      wepy.navigateTo({
        url: `/pages/workbook/add?id=${wepy.getStorageSync('gnb_middle_User').textbookId}`
      })
    }
  }

  /** 微信服务器获取CODE */
  _login () {
    return new Promise((resolve, reject) => {
      wepy.login({
        success (res) {
          console.log(res.code)
          resolve(res.code)
        }
      })
    })
  }

  /** 通过code获取OPENID */
  _getOpenId (code) {
    wepy.clearStorageSync()
    return new Promise((resolve, reject) => {
      wepy.request({
        url: 'https://wechat.guinaben.com/mini-program/openId',
        data: {
          code: code,
          app: 'middle'
        },
        success (res) {
          wepy.setStorageSync('gnb_middle_openId', res.openid)
          wepy.setStorageSync('gnb_middle_session_key', res.session_key)
          resolve(res)
        },
        fail (err) {
          reject(err)
        }
      })
    })
  }
  /** 获取我的练习册 */
  _getMyWorkbook (id) {
    return new Promise((resolve, reject) => {
      wepy.request({
        url: 'https://mid.guinaben.com/v2/workbook',
        data: {
          textbookId: id
        },
        success (res) {
          resolve(res)
        },
        fail (err) {
          reject(err)
        }
      })
    })
  }

  /** 获取用户信息 */
  _getUserInfo () {
    return new Promise((resolve, reject) => {
      wepy.request({
        url: 'https://mid.guinaben.com/v2/member/info',
        success (res) {
          wepy.setStorageSync('gnb_middle_User', res)
          resolve(res)
        },
        fail (err) {
          reject(err)
        }
      })
    })
  }

  /** 更改用户信息 */
  _setUserInfo (id) {
    wepy.showLoading({title: '请稍候'})
    return new Promise((resolve, reject) => {
      wepy.request({
        url: 'https://mid.guinaben.com/v2/member/infoEdit',
        method: 'POST',
        data: {
          textbookId: id
        },
        success (res) {
          wepy.hideLoading()
          resolve(res)
        },
        fail (err) {
          wepy.hideLoading()
          reject(err)
        }
      })
    })
  }
  
  async onShow() {
    try {
      /**
        * 1 获取是否存有openId 如果没有代表为登录过
        * 2 获取openId
        * 3 在通过openId获得用户信息
        */
      if (wepy.getStorageSync('gnb_middle_openId').length === 0) {
        let code = await this._login()
        await this._getOpenId(code)
      }
      let userInfo = await this._getUserInfo()
      wepy.setStorageSync('gnb_middle_User', userInfo)
      this.textBookList = wepy.getStorageSync('gnb_middle_User').textbook
      this.textbook = wepy.getStorageSync('gnb_middle_User').textbookId
      this.workbookList = await this._getMyWorkbook(this.textbook)
      this.$apply()
    } catch (err) {
      wepy.hideLoading()
    }
  }

  onShareAppMessage (res) {
    if (res.from === 'button') {
      console.log(res.target)
    }
    return {
      title: '各位家长，用这个记错题，速度快，用处大',
      imageUrl: 'http://img.guinaben.com/gnb_miniprogram_share.jpg?imageView2/0/q/75|imageslim',
      path: '/pages/workbook/index'
    }
  }
}
</script>
